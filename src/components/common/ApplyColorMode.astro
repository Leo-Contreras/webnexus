---
import { UI } from "~/utils/config";

// TODO: This code is temporary
---

<script is:inline define:vars={{ defaultTheme: UI.theme || "system" }}>
  function applyTheme(theme) {
    if (theme === "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    const matches = document.querySelectorAll("[data-aw-toggle-color-scheme] > input");

    if (matches && matches.length) {
      matches.forEach((elem) => {
        elem.checked = theme !== "dark";
      });
    }
   
  }

  /*
  if ((defaultTheme && defaultTheme.endsWith(":only")) || (!localStorage.theme && defaultTheme !== "system")) {
    applyTheme(defaultTheme.replace(":only", ""));
  } else if (
    localStorage.theme === "dark" ||
    (!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    applyTheme("dark");
  } else {
    applyTheme("light");
  }
*/
  // Función para configurar el tema según el estado almacenado
  const setTheme = () => {
    const storedTheme = localStorage.getItem('theme'); // O cualquier otro medio para obtener el tema almacenado
    if (storedTheme) {
      applyTheme(storedTheme);
    }
  };

  // Aplicar el tema cuando la página se carga por primera vez
  setTheme();

  // Aplicar el tema después de cada cambio de página con Astro.js
  document.addEventListener('astro:after-swap', setTheme);

  
  </script>
